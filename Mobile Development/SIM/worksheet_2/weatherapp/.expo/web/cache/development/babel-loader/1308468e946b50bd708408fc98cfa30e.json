{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { apiKey } from \"./keys/weatherAPIKey\";\nimport Weather from \"./components/weather\";\nimport Geolocation from '@react-native-community/geolocation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false,\n      temperature: 0,\n      weatherCondition: null,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"fetchWeather\",\n    value: function fetchWeather() {\n      var _this2 = this;\n\n      var lat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 25;\n      var lon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;\n      fetch(\"http://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + lon + \"&APPID=\" + apiKey + \"&units=metric\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        _this2.setState({\n          temperature: json.main.temp,\n          weatherCondition: json.weather[0].main,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      Geolocation.getCurrentPosition(function (position) {\n        _this3.fetchWeather(position.coords.latitude, position.coords.longitude);\n      }, function (error) {\n        return _this3.setState({\n          error: 'Error retrieving weather condition'\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      return _jsx(View, {\n        style: styles.container,\n        children: isLoading ? _jsx(Text, {\n          children: \"Fetching The Weather\"\n        }) : _jsx(Weather, {\n          weather: this.state.weatherCondition,\n          temperature: this.state.temperature\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","apiKey","Weather","Geolocation","App","props","state","isLoading","temperature","weatherCondition","error","lat","lon","fetch","then","res","json","console","log","setState","main","temp","weather","getCurrentPosition","position","fetchWeather","coords","latitude","longitude","styles","container","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/yiqua/Desktop/year_3_sem_1/Mobile Development/SIM/worksheet_2/weatherapp/App.js"],"sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Animated } from 'react-native';\nimport {apiKey} from './keys/weatherAPIKey'\nimport Weather from './components/weather'\nimport Geolocation from '@react-native-community/geolocation';\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      isLoading:false,\n      temperature:0,\n      weatherCondition:null,\n      error:null\n    }\n  }\n\n fetchWeather(lat=25,lon=25){\n    fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${apiKey}&units=metric`)\n    .then(res=>res.json())\n    .then(json=>{\n      console.log(json)\n      this.setState({temperature:json.main.temp,weatherCondition:json.weather[0].main,isLoading:false})\n    })\n  }\n  \n  componentDidMount(){\n     \n    Geolocation.getCurrentPosition(\nposition=>{this.fetchWeather(position.coords.latitude, position.coords.longitude)},\nerror=>this.setState({error:'Error retrieving weather condition'})\n    )\n  }\n\n  \n  render(){\n    const {isLoading} = this.state;\n    return(\n    <View style={styles.container}>\n      {isLoading ? <Text>Fetching The Weather</Text>:<Weather weather={this.state.weatherCondition} temperature={this.state.temperature}/>}\n    </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAAQC,MAAR;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;;IAEqBC,G;;;;;EACnB,aAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IAChB,0BAAMA,KAAN;IAEA,MAAKC,KAAL,GAAW;MACTC,SAAS,EAAC,KADD;MAETC,WAAW,EAAC,CAFH;MAGTC,gBAAgB,EAAC,IAHR;MAITC,KAAK,EAAC;IAJG,CAAX;IAHgB;EASjB;;;;WAEF,wBAA2B;MAAA;;MAAA,IAAdC,GAAc,uEAAV,EAAU;MAAA,IAAPC,GAAO,uEAAH,EAAG;MACxBC,KAAK,yDAAuDF,GAAvD,aAAkEC,GAAlE,eAA+EX,MAA/E,mBAAL,CACCa,IADD,CACM,UAAAC,GAAG;QAAA,OAAEA,GAAG,CAACC,IAAJ,EAAF;MAAA,CADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAE;QACVC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;QACA,MAAI,CAACG,QAAL,CAAc;UAACX,WAAW,EAACQ,IAAI,CAACI,IAAL,CAAUC,IAAvB;UAA4BZ,gBAAgB,EAACO,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBF,IAA7D;UAAkEb,SAAS,EAAC;QAA5E,CAAd;MACD,CALD;IAMD;;;WAED,6BAAmB;MAAA;;MAEjBJ,WAAW,CAACoB,kBAAZ,CACJ,UAAAC,QAAQ,EAAE;QAAC,MAAI,CAACC,YAAL,CAAkBD,QAAQ,CAACE,MAAT,CAAgBC,QAAlC,EAA4CH,QAAQ,CAACE,MAAT,CAAgBE,SAA5D;MAAuE,CAD9E,EAEJ,UAAAlB,KAAK;QAAA,OAAE,MAAI,CAACS,QAAL,CAAc;UAACT,KAAK,EAAC;QAAP,CAAd,CAAF;MAAA,CAFD;IAID;;;WAGD,kBAAQ;MACN,IAAOH,SAAP,GAAoB,KAAKD,KAAzB,CAAOC,SAAP;MACA,OACA,KAAC,IAAD;QAAM,KAAK,EAAEsB,MAAM,CAACC,SAApB;QAAA,UACGvB,SAAS,GAAG,KAAC,IAAD;UAAA;QAAA,EAAH,GAAqC,KAAC,OAAD;UAAS,OAAO,EAAE,KAAKD,KAAL,CAAWG,gBAA7B;UAA+C,WAAW,EAAE,KAAKH,KAAL,CAAWE;QAAvE;MADjD,EADA;IAKD;;;;EArC8BR,KAAK,CAAC+B,S;;SAAlB3B,G;AAwCrB,IAAMyB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}